


---

1. Stripe Integration (Backend)

Step 1: Add to requirements.txt

stripe

Step 2: Update hologram_api.py

Add at the top:

import stripe
import os

stripe.api_key = os.getenv("STRIPE_SECRET_KEY")

Update purchase_item:

@app.post("/purchase")
def purchase_item(req: PurchaseRequest):
    prices = {
        "basic_hologram": 0,
        "ai_hologram": 500,            # $5.00
        "celestial_armor": 1000,       # $10.00
        "sword_of_truth": 700,
        "full_package": 2000
    }

    price = prices.get(req.item)
    if price is None:
        return {"error": "Invalid item"}

    if price == 0:
        return {"status": "ok", "unlocked": req.item}

    # Create Stripe Checkout Session
    session = stripe.checkout.Session.create(
        payment_method_types=["card"],
        line_items=[{
            "price_data": {
                "currency": "usd",
                "product_data": {
                    "name": req.item.replace("_", " ").title()
                },
                "unit_amount": price
            },
            "quantity": 1
        }],
        mode="payment",
        success_url="https://yourgame.com/success?session_id={CHECKOUT_SESSION_ID}",
        cancel_url="https://yourgame.com/cancel"
    )
    return {"status": "payment_required", "url": session.url}


---

2. Deployment to Railway (Free & Easy)

Step-by-Step:

1. Go to https://railway.app


2. Click “New Project” > “Deploy from GitHub”


3. Point to your celestial_hologram_system repo


4. In Environment Variables, set:

STRIPE_SECRET_KEY=sk_test_...   (your Stripe key)


5. Click Deploy


6. After deploy, set your FiveM Lua server endpoint to https://your-backend.railway.app/purchase




---

3. Lua Client Update for Stripe Checkout

If a player hasn’t paid, you can show them a purchase link:

if data.status == "payment_required" and data.url then
    TriggerClientEvent("chat:addMessage", source, {
        args = {"[System]", "Purchase here to unlock: " .. data.url}
    })
end


---



